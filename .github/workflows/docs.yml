name: Deploy Docusaurus Documentation

on:
  push:
    branches:
      - main
      - feat-github-docs-page-2  # For testing during development
    paths:
      - 'docs-site/**'
      - '.github/workflows/docs.yml'
  pull_request:
    paths:
      - 'docs-site/**'
      - '.github/workflows/docs.yml'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash
    working-directory: docs-site

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0  # Not needed if lastUpdatedBy and editUrl are disabled

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: docs-site/build

  deploy:
    name: Deploy to GitHub Pages
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    # Only deploy on main branch pushes
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  test-build:
    name: Test Build (PR/Branch)
    runs-on: ubuntu-latest
    # Only run for PRs and non-main branch pushes
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Test build
        run: npm run build

      - name: Test serve (quick check)
        run: |
          npm run serve &
          SERVER_PID=$!
          # Wait for server to start
          sleep 5
          # Quick health check
          curl -f http://localhost:3000/ || (echo "Build test failed - server not responding" && exit 1)
          # Kill the server
          kill $SERVER_PID